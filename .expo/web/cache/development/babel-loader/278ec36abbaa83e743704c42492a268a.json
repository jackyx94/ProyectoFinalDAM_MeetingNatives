{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JackPC\\\\Desktop\\\\ProyectoDAM\\\\MeetingNatives\\\\Meetives\\\\src\\\\screens\\\\LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"react-native-paper\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport firebase from \"firebase\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    } else {\n      singingIn(email.value, password.value);\n    }\n  };\n\n  var singingIn = function singingIn() {\n    firebase.auth().signInWithEmailAndPassword(email.value, password.value).then(function (userCredential) {\n      var user = userCredential.user;\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: \"ChooseScreen\"\n        }]\n      });\n    }).catch(function (error) {\n      console.log(\"LogError: \" + error.message + \"_Code: \" + error.code);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      if (errorCode === \"auth/wrong-password\") {\n        setPassword(_objectSpread(_objectSpread({}, password), {}, {\n          error: \"ContraseÃ±a incorrecta\"\n        }));\n      } else if (errorCode === \"auth/user-not-found\") {\n        setEmail(_objectSpread(_objectSpread({}, email), {}, {\n          error: \"Este email no tiene cuenta asociada\"\n        }));\n      }\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Bienvenido de nuevo.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Contrase\\xF1a\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: \"\"\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"ResetPasswordScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"\\xBFHas olvidado tu contrase\\xF1a?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"\\xBFNo tienes cuenta a\\xFAn? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace(\"RegisterScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Crear cuenta\"))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: \"100%\",\n    alignItems: \"flex-end\",\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["C:/Users/JackPC/Desktop/ProyectoDAM/MeetingNatives/Meetives/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","firebase","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","singingIn","auth","signInWithEmailAndPassword","then","userCredential","user","reset","index","routes","name","catch","console","log","message","code","errorCode","errorMessage","goBack","text","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TouchableOpacity, StyleSheet, View } from \"react-native\";\r\nimport { Text } from \"react-native-paper\";\r\nimport Background from \"../components/Background\";\r\nimport Logo from \"../components/Logo\";\r\nimport Header from \"../components/Header\";\r\nimport Button from \"../components/Button\";\r\nimport TextInput from \"../components/TextInput\";\r\nimport BackButton from \"../components/BackButton\";\r\nimport { theme } from \"../core/theme\";\r\nimport { emailValidator } from \"../helpers/emailValidator\";\r\nimport { passwordValidator } from \"../helpers/passwordValidator\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\r\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\r\n\r\n  const onLoginPressed = () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      return;\r\n    } else {\r\n      singingIn(email.value, password.value);\r\n    }\r\n  };\r\n\r\n  const singingIn = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email.value, password.value)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        var user = userCredential.user;\r\n\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: \"ChooseScreen\" }],\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"LogError: \" + error.message + \"_Code: \" + error.code);\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        if (errorCode === \"auth/wrong-password\") {\r\n          setPassword({ ...password, error: \"ContraseÃ±a incorrecta\" });\r\n        } else if (errorCode === \"auth/user-not-found\") {\r\n          setEmail({ ...email, error: \"Este email no tiene cuenta asociada\" });\r\n        }\r\n        //auth/user-not-found\r\n        //auth/wrong-password\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={navigation.goBack} />\r\n      <Logo />\r\n      <Header>Bienvenido de nuevo.</Header>\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: \"\" })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"ContraseÃ±a\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: \"\" })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"ResetPasswordScreen\")}\r\n        >\r\n          <Text style={styles.forgot}>Â¿Has olvidado tu contraseÃ±a?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onLoginPressed}>\r\n        Login\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Â¿No tienes cuenta aÃºn? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace(\"RegisterScreen\")}>\r\n          <Text style={styles.link}>Crear cuenta</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: \"100%\",\r\n    alignItems: \"flex-end\",\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: \"bold\",\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}