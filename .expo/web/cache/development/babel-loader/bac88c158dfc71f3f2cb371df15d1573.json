{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JackPC\\\\Desktop\\\\ProyectoDAM\\\\MeetingNatives\\\\Meetives\\\\src\\\\screens\\\\NativeForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, RadioButton } from \"react-native-paper\";\nimport { Button, TextInput } from \"../customComponents\";\nimport InputSpinner from \"react-native-input-spinner\";\nimport { Chip } from \"react-native-paper\";\nimport { theme } from \"../core/theme\";\nexport default function nativeProfile(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"si\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      yearsLived = _useState4[0],\n      setYearsLived = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addingLang = _useState6[0],\n      setAdding = _useState6[1];\n\n  var _useState7 = useState([{\n    lengua: \"Alemán\",\n    checked: false\n  }, {\n    lengua: \"Italiano\",\n    checked: false\n  }, {\n    lengua: \"Francés\",\n    checked: false\n  }, {\n    lengua: \"Español\",\n    checked: true\n  }, {\n    lengua: \"Chino\",\n    checked: false\n  }, {\n    lengua: \"Inglés\",\n    checked: false\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      languages = _useState8[0],\n      setLanguages = _useState8[1];\n\n  var showSpinner = function showSpinner() {\n    if (checked === \"no\") {\n      return React.createElement(View, {\n        style: styles.spinnerContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.questions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"\\xBFCuantos a\\xF1os has vivido ah\\xED?\"), React.createElement(InputSpinner, {\n        style: styles.margins,\n        max: 99,\n        min: 1,\n        step: 1,\n        color: \"#00BFFF\",\n        value: yearsLived,\n        colorPress: \"#BCBCBC\",\n        fontSize: 16,\n        textColor: \"#696969\",\n        onChange: function onChange(yearsLived) {\n          setYearsLived(yearsLived);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  var addLanguage = function addLanguage() {};\n\n  var changeProfileImage = function changeProfileImage() {};\n\n  var manageChips = function manageChips(text) {\n    console.log(text);\n    var auxArray = languages.map(function (item) {\n      if (item.lengua === text) {\n        if (item.checked === false) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            checked: true\n          });\n        } else {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            checked: false\n          });\n        }\n      } else {\n        return item;\n      }\n    });\n    setLanguages(auxArray);\n  };\n\n  var showChips = function showChips() {\n    var chips = languages.map(function (language) {\n      return React.createElement(Chip, {\n        key: language.lengua,\n        selected: language.checked,\n        style: styles.chipStyles,\n        onPress: function onPress() {\n          return manageChips(language.lengua);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, language.lengua);\n    });\n    return React.createElement(View, {\n      style: styles.chipContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, chips);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    style: styles.avatar,\n    source: require(\"../assets/womanAvatar.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Completa tu perfil\"), React.createElement(TouchableOpacity, {\n    onPress: changeProfileImage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Cambiar imagen\")), React.createElement(TextInput, {\n    label: \"\\xBFEn que ciudad vives?\",\n    placeholder: \"Ciudad\",\n    style: styles.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"\\xBFEres aut\\xF3ctono de esta ciudad?\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.radioView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.radioItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.radioQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Si\"), React.createElement(RadioButton, {\n    color: \"#00BFFF\",\n    value: \"yes\",\n    status: checked === \"yes\" ? \"checked\" : \"unchecked\",\n    onPress: function onPress() {\n      return setChecked(\"yes\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.radioItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.radioQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"No\"), React.createElement(RadioButton, {\n    color: \"#00BFFF\",\n    value: \"no\",\n    status: checked === \"no\" ? \"checked\" : \"unchecked\",\n    onPress: function onPress() {\n      return setChecked(\"no\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })))), showSpinner(), React.createElement(Text, {\n    style: styles.questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"\\xBFQue idiomas hablas?\"), showChips(), React.createElement(TouchableOpacity, {\n    onPress: addLanguage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Otro\")), React.createElement(View, {\n    style: styles.addLangContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    style: styles.buttonAdd,\n    color: \"#00BFFF\",\n    mode: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"A\\xF1adir\")), React.createElement(View, {\n    style: styles.descriptionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Breve descripci\\xF3n personal:\",\n    placeholder: \"\\xBFQue es lo primero que te gustar\\xEDa que los visitantes sepan de ti?\",\n    style: styles.inputs,\n    multiline: true,\n    numberOfLines: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    color: \"#00BFFF\",\n    style: styles.buttonSave,\n    mode: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Guardar perfil\")));\n}\nvar styles = StyleSheet.create({\n  addLangContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  link: {\n    marginTop: 10,\n    fontWeight: \"bold\",\n    color: \"#00BFFF\"\n  },\n  descriptionContainer: {\n    width: \"100%\"\n  },\n  chipContainer: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 20,\n    justifyContent: \"center\"\n  },\n  chipStyles: {\n    marginRight: 16,\n    marginBottom: 10\n  },\n  margins: {\n    marginTop: 20\n  },\n  spinnerContainer: {\n    justifyContent: \"center\"\n  },\n  inputs: {\n    marginTop: 20\n  },\n  buttonSave: {\n    marginTop: 30,\n    color: \"grey\"\n  },\n  buttonAdd: {\n    marginTop: 10,\n    color: \"grey\",\n    width: 120\n  },\n  header: {\n    backgroundColor: \"#00BFFF\",\n    height: 200\n  },\n  container: {\n    flex: 1,\n    width: \"100%\"\n  },\n  radioView: {\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  radioItem: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginHorizontal: 16,\n    marginTop: 16\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n    alignSelf: \"center\",\n    position: \"absolute\",\n    marginTop: 130\n  },\n  questions: {\n    marginTop: 16,\n    fontSize: 16,\n    color: \"#696969\"\n  },\n  radioQuestion: {\n    color: \"#696969\"\n  },\n  body: {\n    width: \"100%\",\n    marginTop: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  name: {\n    fontWeight: \"bold\",\n    fontSize: 28,\n    color: \"#696969\"\n  }\n});","map":{"version":3,"sources":["C:/Users/JackPC/Desktop/ProyectoDAM/MeetingNatives/Meetives/src/screens/NativeForm.js"],"names":["React","useState","Text","RadioButton","Button","TextInput","InputSpinner","Chip","theme","nativeProfile","navigation","checked","setChecked","yearsLived","setYearsLived","addingLang","setAdding","lengua","languages","setLanguages","showSpinner","styles","spinnerContainer","questions","margins","addLanguage","changeProfileImage","manageChips","text","console","log","auxArray","map","item","showChips","chips","language","chipStyles","chipContainer","container","header","avatar","require","body","name","link","inputs","radioView","radioItem","radioQuestion","addLangContainer","buttonAdd","descriptionContainer","buttonSave","StyleSheet","create","flexDirection","flexWrap","justifyContent","marginTop","fontWeight","color","width","alignItems","marginRight","marginBottom","backgroundColor","height","flex","marginHorizontal","borderRadius","borderWidth","borderColor","alignSelf","position","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Text, RadioButton } from \"react-native-paper\";\r\nimport { Button, TextInput } from \"../customComponents\";\r\nimport InputSpinner from \"react-native-input-spinner\";\r\nimport { Chip } from \"react-native-paper\";\r\nimport { theme } from \"../core/theme\";\r\nexport default function nativeProfile({ navigation }) {\r\n  const [checked, setChecked] = useState(\"si\");\r\n  const [yearsLived, setYearsLived] = useState(1);\r\n  const [addingLang, setAdding] = useState(false);\r\n  const [languages, setLanguages] = useState([\r\n    { lengua: \"Alemán\", checked: false },\r\n    { lengua: \"Italiano\", checked: false },\r\n    { lengua: \"Francés\", checked: false },\r\n    { lengua: \"Español\", checked: true },\r\n    { lengua: \"Chino\", checked: false },\r\n    { lengua: \"Inglés\", checked: false },\r\n  ]);\r\n  const showSpinner = () => {\r\n    if (checked === \"no\") {\r\n      return (\r\n        <View style={styles.spinnerContainer}>\r\n          <Text style={styles.questions}>¿Cuantos años has vivido ahí?</Text>\r\n          <InputSpinner\r\n            style={styles.margins}\r\n            max={99}\r\n            min={1}\r\n            step={1}\r\n            color=\"#00BFFF\"\r\n            value={yearsLived}\r\n            colorPress=\"#BCBCBC\"\r\n            fontSize={16}\r\n            textColor=\"#696969\"\r\n            onChange={(yearsLived) => {\r\n              setYearsLived(yearsLived);\r\n            }}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  const addLanguage = () => {};\r\n  const changeProfileImage = () => {};\r\n  const manageChips = (text) => {\r\n    console.log(text);\r\n    var auxArray = languages.map(function (item) {\r\n      if (item.lengua === text) {\r\n        if (item.checked === false) {\r\n          return { ...item, checked: true };\r\n        } else {\r\n          return { ...item, checked: false };\r\n        }\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n    setLanguages(auxArray);\r\n  };\r\n  const showChips = () => {\r\n    var chips = languages.map(function (language) {\r\n      return (\r\n        <Chip\r\n          key={language.lengua}\r\n          selected={language.checked}\r\n          style={styles.chipStyles}\r\n          onPress={() => manageChips(language.lengua)}\r\n        >\r\n          {language.lengua}\r\n        </Chip>\r\n      );\r\n    });\r\n    return <View style={styles.chipContainer}>{chips}</View>;\r\n  };\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}></View>\r\n      <Image\r\n        style={styles.avatar}\r\n        source={require(\"../assets/womanAvatar.png\")}\r\n      />\r\n      <View style={styles.body}>\r\n        <Text style={styles.name}>Completa tu perfil</Text>\r\n        <TouchableOpacity onPress={changeProfileImage()}>\r\n          <Text style={styles.link}>Cambiar imagen</Text>\r\n        </TouchableOpacity>\r\n        <TextInput\r\n          label=\"¿En que ciudad vives?\"\r\n          placeholder=\"Ciudad\"\r\n          style={styles.inputs}\r\n        ></TextInput>\r\n        <Text style={styles.questions}>¿Eres autóctono de esta ciudad?</Text>\r\n        <View>\r\n          <View style={styles.radioView}>\r\n            <View style={styles.radioItem}>\r\n              <Text style={styles.radioQuestion}>Si</Text>\r\n              <RadioButton\r\n                color=\"#00BFFF\"\r\n                value=\"yes\"\r\n                status={checked === \"yes\" ? \"checked\" : \"unchecked\"}\r\n                onPress={() => setChecked(\"yes\")}\r\n              />\r\n            </View>\r\n            <View style={styles.radioItem}>\r\n              <Text style={styles.radioQuestion}>No</Text>\r\n              <RadioButton\r\n                color=\"#00BFFF\"\r\n                value=\"no\"\r\n                status={checked === \"no\" ? \"checked\" : \"unchecked\"}\r\n                onPress={() => setChecked(\"no\")}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n        {showSpinner()}\r\n        <Text style={styles.questions}>¿Que idiomas hablas?</Text>\r\n        {showChips()}\r\n        <TouchableOpacity onPress={addLanguage()}>\r\n          <Text style={styles.questions}>Otro</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.addLangContainer}>\r\n          <TextInput></TextInput>\r\n          <Button style={styles.buttonAdd} color=\"#00BFFF\" mode=\"contained\">\r\n            Añadir\r\n          </Button>\r\n        </View>\r\n        <View style={styles.descriptionContainer}>\r\n          {/* <Text style={styles.questions}>Breve descripción personal:</Text> */}\r\n          <TextInput\r\n            label=\"Breve descripción personal:\"\r\n            placeholder=\"¿Que es lo primero que te gustaría que los visitantes sepan de ti?\"\r\n            style={styles.inputs}\r\n            multiline={true}\r\n            numberOfLines={4}\r\n          ></TextInput>\r\n        </View>\r\n        <Button color=\"#00BFFF\" style={styles.buttonSave} mode=\"contained\">\r\n          Guardar perfil\r\n        </Button>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  addLangContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  link: {\r\n    marginTop: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"#00BFFF\",\r\n  },\r\n  descriptionContainer: {\r\n    width: \"100%\",\r\n  },\r\n  chipContainer: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  chipStyles: {\r\n    marginRight: 16,\r\n    marginBottom: 10,\r\n  },\r\n  margins: {\r\n    marginTop: 20,\r\n  },\r\n  spinnerContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  inputs: {\r\n    marginTop: 20,\r\n  },\r\n  buttonSave: {\r\n    marginTop: 30,\r\n    color: \"grey\",\r\n  },\r\n  buttonAdd: {\r\n    marginTop: 10,\r\n    color: \"grey\",\r\n    width: 120,\r\n  },\r\n  header: {\r\n    backgroundColor: \"#00BFFF\",\r\n    height: 200,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  radioView: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  radioItem: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 16,\r\n    marginTop: 16,\r\n  },\r\n  avatar: {\r\n    width: 130,\r\n    height: 130,\r\n    borderRadius: 63,\r\n    borderWidth: 4,\r\n    borderColor: \"white\",\r\n    marginBottom: 10,\r\n    alignSelf: \"center\",\r\n    position: \"absolute\",\r\n    marginTop: 130,\r\n  },\r\n  questions: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: \"#696969\",\r\n  },\r\n  radioQuestion: {\r\n    // fontSize: 16,\r\n    color: \"#696969\",\r\n  },\r\n  body: {\r\n    width: \"100%\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    //alignSelf: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 30,\r\n  },\r\n  name: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 28,\r\n    color: \"#696969\",\r\n    //fontWeight: \"600\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}