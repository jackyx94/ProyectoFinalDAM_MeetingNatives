{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JackPC\\\\Desktop\\\\ProyectoDAM\\\\MeetingNatives\\\\Meetives\\\\src\\\\screens\\\\NativeForm.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, RadioButton } from \"react-native-paper\";\nimport { Button, TextInput } from \"../customComponents\";\nimport InputSpinner from \"react-native-input-spinner\";\nimport { Chip } from \"react-native-paper\";\nexport default function nativeProfile(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"si\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checked = _useState4[0],\n      setChecked = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      yearsLived = _useState6[0],\n      setYearsLived = _useState6[1];\n\n  var _useState7 = useState([{\n    aleman: false\n  }, {\n    italiano: false\n  }, {\n    ingles: false\n  }, {\n    frances: false\n  }, {\n    español: true\n  }, {\n    chino: false\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      languages = _useState8[0],\n      setLanguages = _useState8[1];\n\n  var showSpinner = function showSpinner() {\n    if (checked === \"no\") {\n      return React.createElement(View, {\n        style: styles.spinnerContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.questions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, \"\\xBFCuantos a\\xF1os has vivido ah\\xED?\"), React.createElement(InputSpinner, {\n        style: styles.margins,\n        max: 99,\n        min: 1,\n        step: 1,\n        colorMax: \"#00BFFF\",\n        colorMin: \"#00BFFF\",\n        value: yearsLived,\n        onChange: function onChange(yearsLived) {\n          setYearsLived(yearsLived);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  var showChips = function showChips() {\n    var chips = languages.map(function (language) {\n      console.log(language);\n    });\n    return React.createElement(View, {\n      style: styles.chipContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, chips);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    style: styles.avatar,\n    source: require(\"../assets/womanAvatar.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Completa tu perfil\"), React.createElement(Text, {\n    style: styles.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Cambiar imagen\"), React.createElement(TextInput, {\n    label: \"\\xBFEn que ciudad vives?\",\n    placeholder: \"Ciudad\",\n    style: styles.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"\\xBFEres aut\\xF3ctono de esta ciudad?\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.radioView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.radioItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.radioQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Si\"), React.createElement(RadioButton, {\n    value: \"yes\",\n    status: checked === \"yes\" ? \"checked\" : \"unchecked\",\n    onPress: function onPress() {\n      return setChecked(\"yes\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.radioItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.radioQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"No\"), React.createElement(RadioButton, {\n    value: \"no\",\n    status: checked === \"no\" ? \"checked\" : \"unchecked\",\n    onPress: function onPress() {\n      return setChecked(\"no\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })))), showSpinner(), React.createElement(Text, {\n    style: styles.questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"\\xBFQue idiomas hablas?\"), showChips(), React.createElement(View, {\n    style: styles.descriptionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Breve descripci\\xF3n personal:\",\n    placeholder: \"\\xBFQue es lo primero que te gustar\\xEDa que los visitantes sepan de ti?\",\n    style: styles.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    style: styles.buttonSave,\n    mode: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Guardar perfil\")));\n}\nvar styles = StyleSheet.create({\n  descriptionContainer: {\n    width: \"100%\"\n  },\n  chipContainer: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 20,\n    justifyContent: \"center\"\n  },\n  chipStyles: {\n    marginRight: 16,\n    marginBottom: 10\n  },\n  margins: {\n    marginTop: 20\n  },\n  spinnerContainer: {},\n  inputs: {\n    marginTop: 20\n  },\n  buttonSave: {\n    marginTop: 30,\n    color: \"grey\"\n  },\n  header: {\n    backgroundColor: \"#00BFFF\",\n    height: 200\n  },\n  container: {\n    flex: 1,\n    width: \"100%\"\n  },\n  radioView: {\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  radioItem: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginHorizontal: 16,\n    marginTop: 16\n  },\n  avatar: {\n    width: 130,\n    height: 130,\n    borderRadius: 63,\n    borderWidth: 4,\n    borderColor: \"white\",\n    marginBottom: 10,\n    alignSelf: \"center\",\n    position: \"absolute\",\n    marginTop: 130\n  },\n  questions: {\n    marginTop: 16,\n    fontSize: 16,\n    color: \"#696969\"\n  },\n  radioQuestion: {\n    color: \"#696969\"\n  },\n  body: {\n    width: \"100%\",\n    marginTop: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  name: {\n    fontSize: 28,\n    color: \"#696969\",\n    fontWeight: \"600\"\n  },\n  info: {\n    fontSize: 16,\n    color: \"#00BFFF\",\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/JackPC/Desktop/ProyectoDAM/MeetingNatives/Meetives/src/screens/NativeForm.js"],"names":["React","useState","Text","RadioButton","Button","TextInput","InputSpinner","Chip","nativeProfile","navigation","value","name","setName","checked","setChecked","yearsLived","setYearsLived","aleman","italiano","ingles","frances","español","chino","languages","setLanguages","showSpinner","styles","spinnerContainer","questions","margins","showChips","chips","map","language","console","log","chipContainer","container","header","avatar","require","body","info","inputs","radioView","radioItem","radioQuestion","descriptionContainer","buttonSave","StyleSheet","create","width","alignItems","flexDirection","flexWrap","marginTop","justifyContent","chipStyles","marginRight","marginBottom","color","backgroundColor","height","flex","marginHorizontal","borderRadius","borderWidth","borderColor","alignSelf","position","fontSize","padding","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image, ScrollView } from \"react-native\";\r\nimport { Text, RadioButton } from \"react-native-paper\";\r\nimport { Button, TextInput } from \"../customComponents\";\r\nimport InputSpinner from \"react-native-input-spinner\";\r\nimport { Chip } from \"react-native-paper\";\r\n\r\nexport default function nativeProfile({ navigation }) {\r\n  const [name, setName] = useState({ value: \"\" });\r\n  const [checked, setChecked] = useState(\"si\");\r\n  const [yearsLived, setYearsLived] = useState(1);\r\n  const [languages, setLanguages] = useState([\r\n    { aleman: false },\r\n    { italiano: false },\r\n    { ingles: false },\r\n    { frances: false },\r\n    { español: true },\r\n    { chino: false },\r\n  ]);\r\n  const showSpinner = () => {\r\n    if (checked === \"no\") {\r\n      return (\r\n        <View style={styles.spinnerContainer}>\r\n          <Text style={styles.questions}>¿Cuantos años has vivido ahí?</Text>\r\n          <InputSpinner\r\n            style={styles.margins}\r\n            max={99}\r\n            min={1}\r\n            step={1}\r\n            colorMax={\"#00BFFF\"}\r\n            colorMin={\"#00BFFF\"}\r\n            value={yearsLived}\r\n            onChange={(yearsLived) => {\r\n              setYearsLived(yearsLived);\r\n            }}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  const showChips = () => {\r\n    var chips = languages.map(function (language) {\r\n      console.log(language);\r\n      //<Chip></Chip>\r\n    });\r\n    return (\r\n      <View style={styles.chipContainer}>\r\n        {chips}\r\n        {/* <Chip style={styles.chipStyles}>Inglés</Chip>\r\n        <Chip style={styles.chipStyles}>Italiano</Chip>\r\n        <Chip style={styles.chipStyles}>Alemán</Chip>\r\n        <Chip style={styles.chipStyles}>Francés</Chip>\r\n        <Chip style={styles.chipStyles}>Español</Chip>\r\n        <Chip style={styles.chipStyles}>Chino</Chip> */}\r\n      </View>\r\n    );\r\n  };\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}></View>\r\n      <Image\r\n        style={styles.avatar}\r\n        source={require(\"../assets/womanAvatar.png\")}\r\n      />\r\n      <View style={styles.body}>\r\n        <Text style={styles.name}>Completa tu perfil</Text>\r\n        <Text style={styles.info}>Cambiar imagen</Text>\r\n        <TextInput\r\n          label=\"¿En que ciudad vives?\"\r\n          placeholder=\"Ciudad\"\r\n          style={styles.inputs}\r\n        ></TextInput>\r\n        <Text style={styles.questions}>¿Eres autóctono de esta ciudad?</Text>\r\n        <View>\r\n          <View style={styles.radioView}>\r\n            <View style={styles.radioItem}>\r\n              <Text style={styles.radioQuestion}>Si</Text>\r\n              <RadioButton\r\n                value=\"yes\"\r\n                status={checked === \"yes\" ? \"checked\" : \"unchecked\"}\r\n                onPress={() => setChecked(\"yes\")}\r\n              />\r\n            </View>\r\n            <View style={styles.radioItem}>\r\n              <Text style={styles.radioQuestion}>No</Text>\r\n              <RadioButton\r\n                value=\"no\"\r\n                status={checked === \"no\" ? \"checked\" : \"unchecked\"}\r\n                onPress={() => setChecked(\"no\")}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n        {showSpinner()}\r\n        <Text style={styles.questions}>¿Que idiomas hablas?</Text>\r\n        {showChips()}\r\n        <View style={styles.descriptionContainer}>\r\n          {/* <Text style={styles.questions}>Breve descripción personal:</Text> */}\r\n          <TextInput\r\n            label=\"Breve descripción personal:\"\r\n            placeholder=\"¿Que es lo primero que te gustaría que los visitantes sepan de ti?\"\r\n            style={styles.inputs}\r\n          ></TextInput>\r\n        </View>\r\n        <Button style={styles.buttonSave} mode=\"contained\">\r\n          Guardar perfil\r\n        </Button>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  descriptionContainer: {\r\n    width: \"100%\",\r\n  },\r\n  chipContainer: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  chipStyles: {\r\n    marginRight: 16,\r\n    marginBottom: 10,\r\n  },\r\n  margins: {\r\n    marginTop: 20,\r\n  },\r\n  spinnerContainer: {},\r\n  inputs: {\r\n    marginTop: 20,\r\n  },\r\n  buttonSave: {\r\n    marginTop: 30,\r\n    color: \"grey\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#00BFFF\",\r\n    height: 200,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  radioView: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  radioItem: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 16,\r\n    marginTop: 16,\r\n  },\r\n  avatar: {\r\n    width: 130,\r\n    height: 130,\r\n    borderRadius: 63,\r\n    borderWidth: 4,\r\n    borderColor: \"white\",\r\n    marginBottom: 10,\r\n    alignSelf: \"center\",\r\n    position: \"absolute\",\r\n    marginTop: 130,\r\n  },\r\n  questions: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: \"#696969\",\r\n  },\r\n  radioQuestion: {\r\n    // fontSize: 16,\r\n    color: \"#696969\",\r\n  },\r\n  body: {\r\n    width: \"100%\",\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    //alignSelf: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 30,\r\n  },\r\n  name: {\r\n    fontSize: 28,\r\n    color: \"#696969\",\r\n    fontWeight: \"600\",\r\n  },\r\n  info: {\r\n    fontSize: 16,\r\n    color: \"#00BFFF\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}